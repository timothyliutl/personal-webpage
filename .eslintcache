[{"/Users/timothyliu/Documents/Web Development/personal-webpage/src/index.tsx":"1","/Users/timothyliu/Documents/Web Development/personal-webpage/src/reportWebVitals.ts":"2","/Users/timothyliu/Documents/Web Development/personal-webpage/src/App.tsx":"3","/Users/timothyliu/Documents/Web Development/personal-webpage/src/Pages/Welcome.tsx":"4","/Users/timothyliu/Documents/Web Development/personal-webpage/src/Components/AppBar.tsx":"5","/Users/timothyliu/Documents/Web Development/personal-webpage/src/Components/CurrentProjects.tsx":"6","/Users/timothyliu/Documents/Web Development/personal-webpage/src/Components/ProjectCards.tsx":"7"},{"size":500,"mtime":1611494715559,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1611494715561,"results":"10","hashOfConfig":"9"},{"size":531,"mtime":1613797975125,"results":"11","hashOfConfig":"9"},{"size":3243,"mtime":1613848753177,"results":"12","hashOfConfig":"9"},{"size":1478,"mtime":1613797904362,"results":"13","hashOfConfig":"9"},{"size":1749,"mtime":1613794967861,"results":"14","hashOfConfig":"9"},{"size":1525,"mtime":1613272771235,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1xgw5ye",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},"/Users/timothyliu/Documents/Web Development/personal-webpage/src/index.tsx",[],["35","36"],"/Users/timothyliu/Documents/Web Development/personal-webpage/src/reportWebVitals.ts",[],"/Users/timothyliu/Documents/Web Development/personal-webpage/src/App.tsx",["37","38"],"import * as React from 'react';\nimport './App.css';\nimport Welcome from \"./Pages/Welcome\";\nimport Appbar from \"./Components/AppBar\"\nimport CurrentProjects from \"./Components/CurrentProjects\"\n//TODO: prototype the website out on figma first\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{marginTop:100}}>\n      \n      <Welcome></Welcome>\n      <div style={{display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',}}>\n        \n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/timothyliu/Documents/Web Development/personal-webpage/src/Pages/Welcome.tsx",["39","40","41","42","43"],"import { Container, Grid, makeStyles, Typography } from '@material-ui/core';\nimport Card from '@material-ui/core/Card'\nimport React, { FC, useState } from 'react';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\n\n\ninterface IProps {\n    cards?: JSON\n}\n\nconst Welcome: FC<IProps> = (props) => {\n    const styles = makeStyles({\n        card: {\n            widthMin: 200,\n            heightMin: 75,\n            padding: 20,\n            marginTop: 15,\n            borderRadius:16\n\n        },\n        title:{\n            marginTop:30\n        },\n        type: {\n            marginBottom: 15,\n        },\n        center: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        icon: {\n            marginLeft: 20,\n            marginRight: 20\n        },\n        link: {\n            textDecoration: 'none',\n            cursor: 'pointer'\n\n        }\n    });\n    const classes = styles();\n    const cards = props.cards;\n\n    const [isHovering, setIsHovering] = useState(false);\n\n    const setHover = () =>{\n        setIsHovering(!isHovering);\n    }\n\n    return (\n        <div>\n            <Typography variant={'h2'}>Hello, I am Timothy Liu</Typography>\n            <Typography variant={'h5'} className={classes.type}>\n                Second year Queen's Mathematics and Engineering Student\n            </Typography>\n\n            \n            <Grid container justify={'center'}>\n                <Card className={classes.card} onMouseEnter={setHover} onMouseLeave={setHover} elevation={isHovering?6:1}>\n                <Typography variant={'h4'} className={classes.type}>\n                Quick Links\n                </Typography>\n                    <Grid container direction={'row'}>\n                        <Grid item className={classes.icon}>\n                            <a className={classes.link} onClick={()=>{window.open('https://drive.google.com/file/d/1aWGhG6A5G0cX_RKIhh_stYlnLnjjoHA0/view')}}>\n                            <InsertDriveFileIcon fontSize={'large'} color={'inherit'}></InsertDriveFileIcon>\n                            <Typography variant={'h6'}>Resume</Typography>\n                            </a>\n                        </Grid>\n                        <Grid item className={classes.icon}>\n                            <a className={classes.link} onClick={()=>{window.open('https://github.com/timothyliutl')}}><GitHubIcon fontSize={'large'}></GitHubIcon>\n                                <Typography variant={'h6'}>GitHub</Typography></a>\n                        </Grid>\n                        <Grid item className={classes.icon}>\n                            <a onClick={()=>{window.open('https://www.linkedin.com/in/timothy-liu-4a738619b/')}} className={classes.link}>\n                                <LinkedInIcon fontSize={'large'} color={'primary'}></LinkedInIcon>\n                                <Typography variant={'h6'}>LinkedIn</Typography>\n                            </a>\n\n                        </Grid>\n                    </Grid>\n                </Card>\n            </Grid>\n\n\n\n\n        </div>\n    )\n}\n\nexport default Welcome;","/Users/timothyliu/Documents/Web Development/personal-webpage/src/Components/AppBar.tsx",["44"],"/Users/timothyliu/Documents/Web Development/personal-webpage/src/Components/CurrentProjects.tsx",[],["45","46"],"/Users/timothyliu/Documents/Web Development/personal-webpage/src/Components/ProjectCards.tsx",["47","48"],"import { CardActionArea, CardContent, CardMedia, makeStyles, Theme, Typography, Paper } from '@material-ui/core'\nimport Card from '@material-ui/core/Card'\n\n\nimport React from 'react'\n\ninterface iProps {\n\n    projectName: string,\n    projectImage: string,\n    projectDescription: string,\n\n\n}\n\nconst ProjectCards = (props:iProps) =>{\n\n    const useStyles = makeStyles({\n        imageStyle: {\n            maxWidth:200,\n            maxHeight:100,\n            padding:30,\n        },\n        cardStyle: {\n            \n            maxHeight:300,\n            Width:400,\n\n        },\n        cardContent:{\n            paddingBottom:30\n        },\n        div:{\n            width: 300\n        }\n    });\n\n    \n    const classes = useStyles();\n\nreturn(\n    <div className={classes.div}>\n        <Card className={classes.cardStyle}>\n            <CardActionArea>\n                <CardMedia>\n                    <img className={classes.imageStyle} src={props.projectImage}></img>\n                </CardMedia>\n                <CardContent className={classes.cardContent}>\n                    <Paper elevation={0}>\n                        <Typography variant={'h2'}>\n                        {props.projectName}\n                        </Typography>\n                        <Typography variant={'h6'}>\n                            {props.projectDescription}\n                        </Typography>\n                    </Paper>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    </div>\n)\n\n}\nexport default ProjectCards;",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":14},{"ruleId":"53","severity":1,"message":"57","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":23},{"ruleId":"53","severity":1,"message":"58","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":19},{"ruleId":"53","severity":1,"message":"59","line":45,"column":11,"nodeType":"55","messageId":"56","endLine":45,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":68,"column":29,"nodeType":"62","endLine":68,"endColumn":159},{"ruleId":"60","severity":1,"message":"61","line":74,"column":29,"nodeType":"62","endLine":74,"endColumn":120},{"ruleId":"60","severity":1,"message":"61","line":78,"column":29,"nodeType":"62","endLine":78,"endColumn":139},{"ruleId":"53","severity":1,"message":"63","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":16},{"ruleId":"49","replacedBy":"64"},{"ruleId":"51","replacedBy":"65"},{"ruleId":"53","severity":1,"message":"66","line":1,"column":62,"nodeType":"55","messageId":"56","endLine":1,"endColumn":67},{"ruleId":"67","severity":1,"message":"68","line":46,"column":21,"nodeType":"62","endLine":46,"endColumn":82},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"@typescript-eslint/no-unused-vars","'Appbar' is defined but never used.","Identifier","unusedVar","'CurrentProjects' is defined but never used.","'Container' is defined but never used.","'cards' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.",["69"],["70"],"'Theme' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]