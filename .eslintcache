[{"/Users/timothyliu/Documents/Web Development/personal-webpage/src/index.tsx":"1","/Users/timothyliu/Documents/Web Development/personal-webpage/src/reportWebVitals.ts":"2","/Users/timothyliu/Documents/Web Development/personal-webpage/src/App.tsx":"3","/Users/timothyliu/Documents/Web Development/personal-webpage/src/Pages/Welcome.tsx":"4","/Users/timothyliu/Documents/Web Development/personal-webpage/src/Components/AppBar.tsx":"5","/Users/timothyliu/Documents/Web Development/personal-webpage/src/Components/CurrentProjects.tsx":"6","/Users/timothyliu/Documents/Web Development/personal-webpage/src/Components/ProjectCards.tsx":"7"},{"size":500,"mtime":1611494715559,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1611494715561,"results":"10","hashOfConfig":"9"},{"size":583,"mtime":1613272972819,"results":"11","hashOfConfig":"9"},{"size":597,"mtime":1613022934361,"results":"12","hashOfConfig":"9"},{"size":1448,"mtime":1613025253838,"results":"13","hashOfConfig":"9"},{"size":1536,"mtime":1613272871581,"results":"14","hashOfConfig":"9"},{"size":1525,"mtime":1613272771235,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1xgw5ye",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/Users/timothyliu/Documents/Web Development/personal-webpage/src/index.tsx",[],["34","35"],"/Users/timothyliu/Documents/Web Development/personal-webpage/src/reportWebVitals.ts",[],"/Users/timothyliu/Documents/Web Development/personal-webpage/src/App.tsx",["36"],"/Users/timothyliu/Documents/Web Development/personal-webpage/src/Pages/Welcome.tsx",["37"],"import { Grid, Typography } from '@material-ui/core';\nimport Card from '@material-ui/core/Card'\nimport React, { FC } from 'react'; \n\n\ninterface IProps{\n    cards?: JSON\n}\n\nconst Welcome:FC<IProps> = (props) =>{\n    const cards = props.cards;\n\n    return(\n        <div>\n            <Typography variant={'h1'}>Hello There</Typography>\n      <Grid container>\n        <Grid item>\n          <Card>\n              <Typography variant={'h4'}>\n                  Quick Links\n              </Typography>\n          </Card>\n        </Grid>\n        \n      </Grid>\n        </div>\n    )\n}\n\nexport default Welcome;","/Users/timothyliu/Documents/Web Development/personal-webpage/src/Components/AppBar.tsx",["38"],"import React from 'react';\nimport AppBar from '@material-ui/core/AppBar'\nimport { Button, Grid, Toolbar } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flex: 1\n        },\n        page: {\n            marginTop: 100,\n            width: '70%'\n        },\n        appbar: {\n            position: 'fixed',\n            borderRadius: 16\n        }\n    }),\n);\n\nconst Appbar = () => {\n\n    const classes = useStyles();\n\n    return (\n\n\n        <div className={classes.page}>\n            <AppBar className={classes.appbar}>\n                <Toolbar>\n                    <Grid container justify={'space-evenly'}>\n                        <Grid item>\n                            <Typography variant={'h6'}>Home</Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant={'h6'}>Current Projects</Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant={'h6'}>Contact</Typography>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n\n\n}\n\nexport default Appbar;","/Users/timothyliu/Documents/Web Development/personal-webpage/src/Components/CurrentProjects.tsx",[],"/Users/timothyliu/Documents/Web Development/personal-webpage/src/Components/ProjectCards.tsx",["39","40"],"import { CardActionArea, CardContent, CardMedia, makeStyles, Theme, Typography, Paper } from '@material-ui/core'\nimport Card from '@material-ui/core/Card'\n\n\nimport React from 'react'\n\ninterface iProps {\n\n    projectName: string,\n    projectImage: string,\n    projectDescription: string,\n\n\n}\n\nconst ProjectCards = (props:iProps) =>{\n\n    const useStyles = makeStyles({\n        imageStyle: {\n            maxWidth:200,\n            maxHeight:100,\n            padding:30,\n        },\n        cardStyle: {\n            \n            maxHeight:300,\n            Width:400,\n\n        },\n        cardContent:{\n            paddingBottom:30\n        },\n        div:{\n            width: 300\n        }\n    });\n\n    \n    const classes = useStyles();\n\nreturn(\n    <div className={classes.div}>\n        <Card className={classes.cardStyle}>\n            <CardActionArea>\n                <CardMedia>\n                    <img className={classes.imageStyle} src={props.projectImage}></img>\n                </CardMedia>\n                <CardContent className={classes.cardContent}>\n                    <Paper elevation={0}>\n                        <Typography variant={'h2'}>\n                        {props.projectName}\n                        </Typography>\n                        <Typography variant={'h6'}>\n                            {props.projectDescription}\n                        </Typography>\n                    </Paper>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    </div>\n)\n\n}\nexport default ProjectCards;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":7,"column":11,"nodeType":"47","messageId":"48","endLine":7,"endColumn":15},{"ruleId":"45","severity":1,"message":"49","line":11,"column":11,"nodeType":"47","messageId":"48","endLine":11,"endColumn":16},{"ruleId":"45","severity":1,"message":"50","line":3,"column":10,"nodeType":"47","messageId":"48","endLine":3,"endColumn":16},{"ruleId":"45","severity":1,"message":"51","line":1,"column":62,"nodeType":"47","messageId":"48","endLine":1,"endColumn":67},{"ruleId":"52","severity":1,"message":"53","line":46,"column":21,"nodeType":"54","endLine":46,"endColumn":82},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"@typescript-eslint/no-unused-vars","'type' is defined but never used.","Identifier","unusedVar","'cards' is assigned a value but never used.","'Button' is defined but never used.","'Theme' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]